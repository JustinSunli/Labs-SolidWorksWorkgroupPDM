<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CheckInComment" xml:space="preserve">
    <value>DriveWorks</value>
  </data>
  <data name="LogDescAboutToAddProjectToParent" xml:space="preserve">
    <value>About to create project  '{0}' in parent '{1}'</value>
    <comment>{0} is the project and {1} is the parent</comment>
  </data>
  <data name="LogDescAboutToCheckInFile" xml:space="preserve">
    <value>About to check in file '{0}'</value>
    <comment>{0} is the file to check in</comment>
  </data>
  <data name="LogDescAboutToCreateProjectStructure" xml:space="preserve">
    <value>About to create project structure '{0}'</value>
    <comment>{0} is the project structure to create</comment>
  </data>
  <data name="LogDescAboutToQueueFolder" xml:space="preserve">
    <value>Queuing folder '{0}' for addition at the end of the batch.</value>
  </data>
  <data name="LogDescAddFileEx" xml:space="preserve">
    <value>Adding file '{0}' threw an unexpected exception. {1}</value>
    <comment>{0} is the file to check in, {1} is the exception</comment>
  </data>
  <data name="LogDescAddFolderEx" xml:space="preserve">
    <value>Adding folder '{0}' threw an unexpected exception. {1}</value>
  </data>
  <data name="LogDescAddFolderResult" xml:space="preserve">
    <value>Adding folder '{0}' returned {1}.</value>
  </data>
  <data name="LogDescBeginBatchAborted" xml:space="preserve">
    <value>Begin Batch aborted because no vault name is specified.</value>
  </data>
  <data name="LogDescBeginBatchIncrement" xml:space="preserve">
    <value>Begin Batch incremented batch depth to {0}</value>
  </data>
  <data name="LogDescCheckingInFileIntoProject" xml:space="preserve">
    <value>The file '{0}' is about to be checked into the project '{1}'</value>
    <comment>{0} is the file to check in, {1} is the project name</comment>
  </data>
  <data name="LogDescCheckingInFileIntoProjectFailed" xml:space="preserve">
    <value>The file '{0}' checkin failed into project '{1}'</value>
    <comment>{0} is the file to check in, {1} is the project name</comment>
  </data>
  <data name="LogDescCheckingInFileIntoProjectSuccess" xml:space="preserve">
    <value>The file '{0}' was successfully check in into project '{1}' and was created with the name '{2}'</value>
    <comment>{0} is the file to check in, {1} is the project name, {2} is the workgroup pdm file object name</comment>
  </data>
  <data name="LogDescEndBatchAborted" xml:space="preserve">
    <value>End Batch aborted because no vault name is specified.</value>
  </data>
  <data name="LogDescEndBatchAborted_AlreadyZero" xml:space="preserve">
    <value>End Batch aborted because the batch depth is already 0.</value>
  </data>
  <data name="LogDescEndBatchDecrement" xml:space="preserve">
    <value>End Batch decremented the batch depth to {0}.</value>
  </data>
  <data name="LogDescFileAdded" xml:space="preserve">
    <value>The file '{0}' was successfully added</value>
  </data>
  <data name="LogDescFileCheckedIn" xml:space="preserve">
    <value>The file '{0}' was successfully checked in</value>
  </data>
  <data name="LogDescFileQueued_Assemblies" xml:space="preserve">
    <value>Queuing file '{0}' to the assembly list.</value>
  </data>
  <data name="LogDescFileQueued_Drawings" xml:space="preserve">
    <value>Queuing file '{0}' to the drawing list.</value>
  </data>
  <data name="LogDescFileQueued_General" xml:space="preserve">
    <value>Queuing file '{0}' to the general list.</value>
  </data>
  <data name="LogDescFileQueued_Parts" xml:space="preserve">
    <value>Queuing file '{0}' to the parts list.</value>
  </data>
  <data name="LogDescFileRelativePath" xml:space="preserve">
    <value>The file '{0}' has a relative path of '{1}'</value>
    <comment>{0} is the file to check in, {1} is the relative path</comment>
  </data>
  <data name="LogDescQueueFileAborted" xml:space="preserve">
    <value>Queuing file '{0}' was aborted because no vault name was specified.</value>
  </data>
  <data name="LogDescQueueFileAbortedNotInVault" xml:space="preserve">
    <value>Queuing file '{0}' was aborted because the file was not underneath the Default Specification Folder.</value>
  </data>
  <data name="LogDescQueueFolderAborted" xml:space="preserve">
    <value>Queuing folder '{0}' was aborted because no vault name was specified.</value>
  </data>
  <data name="LogDescQueueFolderAbortedNotInVault" xml:space="preserve">
    <value>Queuing folder '{0}' was aborted because the folder was not underneath the Default Specification Folder.</value>
  </data>
  <data name="LogPDMCannotCreateInterface" xml:space="preserve">
    <value>Unable to connect to the WorkgroupPDM interface, check that WorkgroupPDM is available and of the correct version.</value>
  </data>
  <data name="LogSettingNameVaultName" xml:space="preserve">
    <value>Vault Name</value>
  </data>
  <data name="LogSettingNameVaultUserName" xml:space="preserve">
    <value>Vault User Name</value>
  </data>
  <data name="LogTitleAddFile" xml:space="preserve">
    <value>Add File</value>
  </data>
  <data name="LogTitleAddFolder" xml:space="preserve">
    <value>Add Folder</value>
  </data>
  <data name="LogTitleBatch" xml:space="preserve">
    <value>Batch</value>
  </data>
  <data name="LogTitleCheckIn" xml:space="preserve">
    <value>Check In</value>
  </data>
  <data name="LogTitleLoadSettings" xml:space="preserve">
    <value>Load Settings</value>
  </data>
  <data name="LogTitleSettingLoaded" xml:space="preserve">
    <value>Setting '{0}' was loaded, its value is '{1}'</value>
  </data>
  <data name="LogTitleVaultRootPath" xml:space="preserve">
    <value>Vault Root Path</value>
  </data>
  <data name="LogVaultLoginAttempt1Failed" xml:space="preserve">
    <value>Attempt 1 - Unable to login to WorkgroupPDM with the details supplied. Trying again with default ports - {0}</value>
    <comment>{0} is the exception message</comment>
  </data>
  <data name="LogVaultLoginAttempt2Failed" xml:space="preserve">
    <value>Attempt 2 - Unable to login to WorkgroupPDM with the default ports - {0}</value>
    <comment>{0} is the exception message</comment>
  </data>
  <data name="LogvaultLoginNonZeroErrorCode" xml:space="preserve">
    <value>Unable to login to Workgroup PDM with the details supplied (Error code {0})</value>
    <comment>{0} is theerror code returned from Workgroup PDM when attempting to log in</comment>
  </data>
  <data name="PluginDescription" xml:space="preserve">
    <value>SolidWorks Workgroup PDM integration for DriveWorks</value>
  </data>
  <data name="PluginName" xml:space="preserve">
    <value>SolidWorks Workgroup PDM</value>
  </data>
  <data name="SourceTitle" xml:space="preserve">
    <value>SolidWorks Workgroup PDM</value>
  </data>
  <data name="TestFailed" xml:space="preserve">
    <value>The connection to the SolidWorks Workgroup PDM vault was unsuccessful. {0}</value>
    <comment>{0} is the detailed problem text</comment>
  </data>
  <data name="TestSucceeded" xml:space="preserve">
    <value>The connection to the SolidWorks Workgroup PDM vault was successful.</value>
  </data>
  <data name="TestTitle" xml:space="preserve">
    <value>Connection Test</value>
  </data>
  <data name="LogDescProjectCreationFailedCompletelyNoVault" xml:space="preserve">
    <value>Unable to create the project '{0}' as there is no connection to the vault available</value>
    <comment>{0} is the project name</comment>
  </data>
  <data name="LogDescProjectAlreadyInVaultAndIsRoot" xml:space="preserve">
    <value>The project '{0}' already exists in the vault and is the root project</value>
    <comment>{0} is the project name</comment>
  </data>
  <data name="LogDescCannotFindParent" xml:space="preserve">
    <value>Project '{0}' cannot be added as its parent ({1}) cannot be found</value>
    <comment>{0} is the project name, {1} is the parent project</comment>
  </data>
  <data name="LogDescProjectAddedToParent" xml:space="preserve">
    <value>Project '{0}' has been created as a child of '{1}'</value>
    <comment>{0} is the project and {1} is the parent</comment>
  </data>
  <data name="LogDescProjectAlreadyInVaultWithParent" xml:space="preserve">
    <value>The project '{0}' already exists in the vault with parent '{1}'</value>
    <comment>{0} is the project name, {1} is the parent project</comment>
  </data>
  <data name="EnvironmentVariableExists" xml:space="preserve">
    <value>The environment variable {0} already exists</value>
    <comment>{0} is the environment variable path</comment>
  </data>
  <data name="EnvironmentVariableRemoved" xml:space="preserve">
    <value>The environment variable {0} has been removed</value>
    <comment>{0} is the environment variable path</comment>
  </data>
  <data name="EnvironmentVariableSet" xml:space="preserve">
    <value>The environment variable {0} has been inserted</value>
    <comment>{0} is the environment variable path</comment>
  </data>
  <data name="EnvironmentVariableTitle" xml:space="preserve">
    <value>Environment Variable</value>
  </data>
  <data name="LogDescCheckingInFileIntoProjectFailedEnsureFailed" xml:space="preserve">
    <value>The file '{0}' could not be checked into the vault with the path '{1}' because one or more of the parent projects could not be found and could not be created.</value>
    <comment>{0} is the file to check in, {1} is the relative vault path</comment>
  </data>
  <data name="LogDescCheckingInDirIntoProjectFailedEnsureFailed" xml:space="preserve">
    <value>The directory '{0}' could not be added to the vault with the path '{1}' because one or more of the projects on the path could not be found and could not be created.</value>
    <comment>{0} is the folder to check in, {1} is the relative vault path</comment>
  </data>
  <data name="LogDescProjectCreationFailed" xml:space="preserve">
    <value>Unable to create the project '{0}' in parent '{1}'. {2}</value>
    <comment>{0} is the project name, {1} is the parent project, {2} is the message from the exception</comment>
  </data>
  <data name="LogDescVaultRootPath" xml:space="preserve">
    <value>The Default Specification Folder, which will be considered the root of the vault, is '{0}'</value>
  </data>
</root>